---
name: Continuous Integration

on:
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Install Dagger
        id: install_dagger
        run: |
          # Modified based on: https://github.com/dagger/dagger-for-github
          # Fallback to /usr/local for backwards compatability
          prefix_dir="${RUNNER_TEMP:-/usr/local}"
          # Ensure the dir is writable otherwise fallback to tmpdir
          if [[ ! -d "$prefix_dir" ]] || [[ ! -w "$prefix_dir" ]]; then
              prefix_dir="$(mktemp -d)"
          fi
          printf '%s/bin' "$prefix_dir" >> $GITHUB_PATH

          # If the dagger version is 'latest', set the version back to an empty
          # string. This allows the install script to detect and install the latest
          # version itself
          VERSION="$(make dagger-version)"
          if [[ "$VERSION" == "0.0.0" ]]; then
            VERSION=
          fi

          # The install.sh script creates path ${prefix_dir}/bin
          curl -fsS https://dl.dagger.io/dagger/install.sh \
          | BIN_DIR=${prefix_dir}/bin DAGGER_VERSION="$VERSION" sh

      - name: Run Tests
        run: make test
      - name: Stop Dagger Engine
        if: always() && steps.install_dagger.outcome == 'success'
        run: |
          # From: https://github.com/dagger/dagger-for-github
          mapfile -t containers < <(docker ps --filter name="dagger-engine-*" -q)
          if [[ "${#containers[@]}" -gt 0 ]]; then
            docker stop -t 300 "${containers[@]}";
          fi